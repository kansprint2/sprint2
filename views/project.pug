extends layout

block content
    script.
    body
        main.container(role="main")
            .container.theme-showcase
                .page-header
                    h3.ml-3.mb-3 #{project.name}

                    .container
                        nav.navbar.navbar-expand-lg.navbar-light.bg-light
                            ul.navbar-nav.mr-auto
                                li.nav-item
                                    a.nav-link(href='/projects')
                                        i.fas.fa-chevron-left
                                        |   Projects

                                if project.scrum_master == uid || project.product_owner == uid
                                    li.nav-item
                                        a.nav-link(href='/stories/project/'+ project.id + '/create') Add User Story

                                if !isUser || project.scrum_master == uid
                                    li.nav-item
                                        a.nav-link(href='/projects/'+ project.id + '/edit') Edit Project
                    hr

                div.main.container
                    div.col-md-12

                        h6 Project Details
                        p.mb-0 Members:
                            each member in project.ProjectMembers
                                | #{" "+ member.name}
                                if project.ProjectMembers.length > 0 && member.id != project.ProjectMembers[project.ProjectMembers.length - 1].id
                                    | ,
                        p.mb-0 Scrum master: #{project.ScrumMaster.name} <br/>
                        p.mb-0 Product owner: #{project.ProductOwner.name} <br/>
                        p.mb-0 Created: #{moment(project.createdAt).format('DD.MM.YYYY')}
                        p.mb-0 Modified: #{moment(project.updatedAt).format('DD.MM.YYYY')}
                        br
                        p.mb-0.font-italic #{project.description} <br/>

                        hr
                        h4(id="storiesDeck") Backlog
                        br

                        // pre #{ JSON.stringify(activeSprint) }

                        if stories.length


                            // RENDER TASKS
                            each story in stories
                                div.tasks-box(id='task-box-' + story.id)
                                    p.mb-2 #{story.name}
                                    form(method='POST' action=('/projects/'+ project.id + '/tasks/' + story.id))
                                        div.row
                                            div.col
                                                div
                                                    div.tasks
                                                        each task in story.Tasks
                                                            div
                                                                span Task description
                                                                span.pl-1
                                                                input(name=(task.id + '_' + 'title') value=task.name type='text' placeholder='' style='max-width: 600px')
                                                                span.pl-3
                                                                span Time estimate
                                                                span.pl-1
                                                                input(name=(task.id + '_' + 'time') value=task.timeEstimate type='number' style='width: 60px')
                                                                span &#128336;
                                                                span.pl-3
                                                                select(name=(task.id + '_' + 'member') style='display: inline-block; width: 200px;').form-control
                                                                    option(value='') #{'Not assigned'}
                                                                    each member in project.ProjectMembers
                                                                        option(value=member.id selected=member.id==task.user_id) #{member.name}
                                                                span.ml-5
                                                                input(name=(task.id + '_' + 'accept') checked=task.isAccepted type='checkbox' disabled=uid!==task.user_id).form-check-input
                                                                label.form-check-label Accept
                                                                span.ml-5
                                                                a.btn.btn-danger.rm-task-btn Remove
                                                    div.new-task
                                                        span Task description
                                                        span.pl-1
                                                        input(name=('NEW_' + 'title') type='text' placeholder='' style='max-width: 600px')
                                                        span.pl-3
                                                        span Time estimate
                                                        span.pl-1
                                                        input(name=('NEW_' + 'time')  type='number' style='width: 60px')
                                                        span &#128336;
                                                        span.pl-3
                                                        select(name=('NEW_' + 'member') style='display: inline-block; width: 200px;').form-control
                                                            option(value='') #{'Not assigned'}
                                                            each member in project.ProjectMembers
                                                                option(value=member.id) #{member.name}
                                                        span.ml-5
                                                        input(name=('NEW_' + 'accept') type='checkbox' disabled=1).form-check-input
                                                        label.form-check-label Accept
                                                        span.ml-5
                                                        a.btn.btn-danger.rm-task-btn Remove
                                                    a.btn.btn-secondary.add-task-btn.text-right Add new task
                                        br
                                        div.text-right
                                            a.btn.btn-secondary.cancel-tasks.mr-2 Cancel
                                            button.btn.btn-primary Save

                            // RENDER TASKS

                            div.card-deck
                                .card.border-secondary
                                    .card-header.alert-warning
                                        | Unassigned Stories -
                                        a#showMore.alert-warning(href='#storiesDeck')  Show less
                                        .br
                                        small All stories not assigned to sprint
                                    .card-body
                                        blockquote.blockquote.mb-0
                                            .list-group
                                                each story in stories
                                                    if !story.sprint_id
                                                        a.list-group-item.list-group-item-action.flex-column.align-items-start(class=story.importance === "won't have this time" ? 'wontHaveThisTime': "")
                                                            .d-flex.w-100.justify-content-between
                                                                p.mb-2 #{story.name}
                                                                if project.scrum_master == uid
                                                                    span(style='cursor: pointer').float-right.time-estimate-holder #{ story.timeEstimate ? (story.timeEstimate + 'h') : '' } &#128336;
                                                                else
                                                                    span(style='cursor: pointer').float-right #{ story.timeEstimate ? (story.timeEstimate + 'h') : '' } &#128336;
                                                            small Description: #{story.description}
                                                            br
                                                            small Acceptance criteria: #{story.acceptanceCriteria}
                                                            br
                                                            small#imporatnce Importance: #{story.importance}
                                                            br
                                                            small Business value: #{story.businessValue}
                                                            br
                                                            button.btn.btn-success.float-right(onclick='showTasks(' + JSON.stringify(story) + ')') View tasks
                                                            br
                                                            if project.scrum_master == uid || project.product_owner == uid
                                                                div.buttons.margin-top20
                                                                    script.
                                                                        function edit (id) {
                                                                            location.href = document.getElementById('editStory'+id).getAttribute("href");
                                                                        };
                                                                        function deleteStory (id) {
                                                                            if (confirm("Do you really want to delete this story?")){
                                                                                $.ajax({
                                                                                    url: document.getElementById("deleteStory"+id).getAttribute("href"),
                                                                                    type: 'DELETE',
                                                                                    success: function(result) {
                                                                                        console.log(result)
                                                                                        location.reload();
                                                                                    }
                                                                                });
                                                                            }
                                                                        };
                                                                    button.btn.btn-primary.float-left(id='editStory'+story.id href='/stories/'+ project.id +'/'+ story.id + '/edit' onclick='edit(' +story.id+')') Edit                                                                        
                                                                    button.btn.btn-danger.float-right(id='deleteStory'+story.id href='/stories/'+ project.id +'/'+ story.id + '/delete' onclick='deleteStory(' +story.id+')') Delete
                                                                br
                                                                br
                                                                form(method='GET' action=('/projects/'+ project.id + '/activate/' + story.id)).text-right.mt-2
                                                                    input(type='hidden' value=story.id min=0)
                                                                    if activeSprintId !== null
                                                                        if story.timeEstimate !== null
                                                                            if ((stories.reduce((a, story) => story.sprint_id === activeSprintId && !story.is_done && story.sprint_id != null ? (a + story.timeEstimate) : a, 0)) + story.timeEstimate) <= (+activeSprint.velocity)
                                                                                button.btn.btn-primary Add to active sprint &#9658;
                                                                            else
                                                                                small(style='color: red') Active sprint is full.
                                                                        else
                                                                            small(style='color: red') Please enter time estimate.
                                                                    else
                                                                        button(disabled).btn.btn-secondary No active sprint!
                                                            form(method='POST' action=('/projects/' + project.id + '/time/' + story.id)).time-estimate-form
                                                                small Time estimate: (Example : 1, 1.5, 1d 2h, 1.5d)
                                                                    input(type='text' name='time' value=story.timeEstimate).w-100
                                                                div.text-right.mt-2
                                                                    span.btn.btn-secondary.mr-2.time-estimate-cancel Cancel
                                                                    button(type=submit).btn.btn-primary Save
                                .card.border-secondary
                                    .card-header.alert-primary
                                        | Assigned
                                        .br
                                        small Uncompleted stories assigned to sprint
                                    .card-body
                                        blockquote.blockquote.mb-0
                                            .list-group
                                                each story in stories
                                                    if(story.sprint_id === activeSprintId && !story.is_done && story.sprint_id != null)
                                                        a.list-group-item.list-group-item-action.flex-column.align-items-start
                                                            .d-flex.w-100.justify-content-between
                                                                p.mb-2 #{story.name}
                                                                span(style='cursor: pointer').float-right #{ story.timeEstimate ? (story.timeEstimate + 'h') : '' } &#128336;
                                                            small Description: #{story.description}
                                                            br
                                                            small Acceptance criteria: #{story.acceptanceCriteria}
                                                            br
                                                            small Importance: #{story.importance}
                                                            br
                                                            small Business value: #{story.businessValue}
                                                            br
                                                            button.btn.btn-success.float-right(onclick='showTasks(' + JSON.stringify(story) + ')') View tasks
                                                            br
                                                            br
                                                            if true
                                                                form(method='GET' action=('/projects/' + project.id + '/deactivate/' + story.id))
                                                                    input(type='hidden' value=story.id)
                                                                    button.btn.btn-danger &#9669; Remove from active sprint
                                                            else
                                                                p

                                .card.border-secondary
                                    .card-header.alert-success
                                        | Completed
                                        .br
                                        small Completed and Accepted Stories
                                    .card-body
                                        blockquote.blockquote.mb-0
                                            .list-group
                                                each story in stories
                                                    if story.is_done
                                                        a.list-group-item.list-group-item-action.flex-column.align-items-start
                                                            .d-flex.w-100.justify-content-between
                                                                p.mb-2 #{story.name}
                                                                span(style='cursor: pointer').float-right #{ story.timeEstimate ? (story.timeEstimate + 'h') : '' } &#128336;
                                                            small Description: #{story.description}
                                                            br
                                                            small Acceptance criteria: #{story.acceptanceCriteria}
                                                            br
                                                            small Importance: #{story.importance}
                                                            br
                                                            small Business value: #{story.businessValue}
                                                            br
                                                            button.btn.btn-success.float-right(onclick='showTasks(' + JSON.stringify(story) + ')') View tasks
                                                            br

                        if !stories.length
                            div.col-md-12
                                p Project does not have any stories specified yet.

    script.



        function showTasks(story) {
            $('#task-box-' + story.id).show();
            console.log(story);
        }


        showMore = document.getElementById('showMore');
        function toggleShownStories() {
            var elements = document.getElementsByClassName("wontHaveThisTime");

            for(var i=0; i<elements.length; i++) {
                if (elements[i].style.display === "none") {
                    elements[i].style.display = "block";
                    showMore.innerText = ' Show less'
                } else {
                    elements[i].style.display = "none";
                    showMore.innerText = ' Show more'
                }
            }
        }
        showMore.onclick = toggleShownStories;
        window.onload = () => {
            $('.time-estimate-form').hide();
            $('.tasks-box').hide();

            $('.cancel-tasks').click(x => {
                $('.tasks-box').hide();
            });

            $('.rm-task-btn').click(x => {
                $(x.target).parent().remove();
            });

            $('.add-task-btn').click(x => {
                const c = $($(x.target).parent().find('.new-task')[0]).clone().removeClass('new-task');
                $($(x.target).parent().find('.tasks')[0]).append(c);

                $('.rm-task-btn').click(x => {
                    $(x.target).parent().remove();
                });
            });


            $('.time-estimate-cancel').click(x => {
                $(x.target).parent().parent().parent().parent().find('.time-estimate-form').hide(100);
                $(x.target).parent().parent().parent().parent().find('.not-time-estimate-form').show(100);
            });

            $('.time-estimate-holder').click(x => {
                $(x.target).parent().parent().find('.time-estimate-form').show(100);
                $(x.target).parent().parent().find('.not-time-estimate-form').hide(100);
            });
        };

